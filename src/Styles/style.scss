@charset "UTF-8";

//****************************************************************************
// Shared
//****************************************************************************

@import 'shared';

//****************************************************************************
// Universal (try to keep these few)
//****************************************************************************

* {
	box-sizing: border-box;
	margin: 0;
	padding: 0;
}

html {
	box-sizing: border-box;
	font-size: 1rem;
	height: 100vh;
}

body {
	box-sizing: border-box;
	color: $grayLight;
	font-family: $bodyfont;
	font-size: 1rem;
	height: 100vh;
	line-height: 1.6;
}

h1,
h2,
h3,
h4,
h5 {
	font-family: $headingfont !important;
	margin-bottom: 0.5rem;
}

h1 {
	font-size: 2.2rem;
}

h2 {
	font-size: 1.9rem;
}

h3 {
	@include themecolor(link);
	color: $link;
	font-size: 1.25rem;
}

a,
a:link {
	color: $link;
	cursor: pointer;
	font-size: 0.9rem;
	text-decoration: none;
	transition: color 0.2s;

	&:hover,
	&:active {
		color: darken($color: $link, $amount: 35%);
		text-decoration: none;
	}
}

ul > li {
	margin-left: 1rem;
}

label {
	display: inline-block;
	margin: 0;
}

mark {
	@include themebackground(alt);
	background-color: $alt;
	padding: 0;
}

img {
	display: block;
	width: 100%;
}

kbd {
	@include themecolor(white);
	@include themebackground(grayDarkAlt);
	background-color: $grayDarkAlt;
	border-radius: $globalRadius;
	box-shadow: inset 0 -1px 0 rgba(0, 0, 0, 0.25);
	color: $white;
	font-size: 0.9rem;
	margin: 0 0 0 0.5rem;
	padding: 2px 4px;
}

input[type='text'] {
	background: none;
	border: none;
	outline: none;
	width: 100%;
}

button.disabled,
input.disabled,
select.disabled {
	@extend %disabled;
}

//****************************************************************************
// Keyframes
//****************************************************************************

@keyframes rainbow {
	0% {
		border-color: #ee7752;
	}

	25% {
		border-color: #e73c7e;
	}

	75% {
		border-color: #23a6d5;
	}

	100% {
		border-color: #23d5ab;
	}
}

@keyframes Gradient {
	0% {
		background-position: 0% 50%;
	}

	50% {
		background-position: 100% 50%;
	}

	100% {
		background-position: 0% 50%;
	}
}

@keyframes rainbowFlash {
	0% {
		border-color: #ee7752;
		box-shadow: 0 0 0 transparent;
	}

	25% {
		border-color: #e73c7e;
		box-shadow: 0 0 0.5rem white;
	}

	75% {
		border-color: #23a6d5;
		box-shadow: 0 0 1rem white;
	}

	99% {
		border-color: #23d5ab;
		box-shadow: 0 0 0.1rem white;
	}

	100% {
		border-color: none;
		box-shadow: none;
	}
}

@keyframes simple-glow {
	0% {
		text-shadow: 0 0 0 white;
	}

	50% {
		color: #4fa300;
		text-shadow: 0 0 0.3rem white;
	}

	100% {
		text-shadow: 0 0 0 white;
	}
}

@keyframes newItemFlash {
	0% {
		background-position: 0% 50%;
		transform: scaleY(-1);
	}

	50% {
		background-position: 100% 50%;
	}

	100% {
		background-position: 0% 50%;
		transform: scaleY(1);
	}
}

@keyframes fadeInDrop {
	0% {
		margin-top: -30%;
		opacity: 0;
		transform: scale(0);
	}

	65% {
		margin-top: -15%;
		opacity: 0.5;
		transform: scale(0.5);
	}

	100% {
		margin-top: none;
		opacity: 1;
		transform: scale(1);
	}
}

@keyframes scaleIn {
	0% {
		filter: blur(15px);
		opacity: 0;
		transform: scale(0);
	}

	100% {
		filter: blur(0);
		opacity: 1;
		transform: scale(1);
	}
}

//****************************************************************************
// Utility
//****************************************************************************

.flex-center {
	align-items: center;
	display: flex;
	flex-direction: column;
	justify-content: center;
}

.flex-page-center {
	align-items: center;
	display: flex;
	flex-direction: column;
	height: 100vh;
	justify-content: center;
	width: 100%;
}

.row-flex {
	display: flex;
	flex-direction: row;

	&.center {
		justify-content: center;
	}

	&.spaced {
		justify-content: space-between;
	}

	&.center-all {
		align-items: center;
		justify-content: center;
	}

	&.align {
		align-items: center;
	}
}

.hidden {
	display: none !important;
}

.row-spacing {
	@extend %clearfix;
	margin-bottom: 0.9rem;
}

//****************************************************************************
// Animation
//****************************************************************************

.shift-background {
	animation: Gradient 15s ease infinite;
	background: linear-gradient(-45deg, #ee7752, #e73c7e, #23a6d5, #23d5ab);
	background-size: 1000%;
}

.gradient-background {
	background: linear-gradient(-45deg, $main, #23d5ab, $alt);
	background-size: 100%;
}

.rainbow-border {
	animation: rainbow 3s infinite alternate;
	border: 0.2rem solid #e73c7e;
}

.animated-newItemFlash {
	animation: newItemFlash 1s;
	animation-iteration-count: 1;
	background: linear-gradient(-45deg, #ee7752, #e73c7e, #0a6a8d, #00b48a);
	background-size: 1000%;
}

.animated-glow-once {
	animation: simple-glow 1s linear;
	animation-iteration-count: 1;
}

.animated-fall {
	animation: fadeInDrop 0.2s linear;
	animation-iteration-count: 1;
}

.animated--scaleIn {
	animation: scaleIn 0.1s linear;
	animation-iteration-count: 1;
}

//*******************************************************************************************************************************
// Components (context free)
//*******************************************************************************************************************************

//link
.themelink {
	@include themecolor(link);
	color: $link;
	font-size: 1rem;
	font-weight: 700;
	text-decoration: none;
	transition: color 0.2s;

	&:hover,
	&:active {
		@include themecolor(alt);
		color: $alt;
		text-decoration: none;
	}
}

//*************************************************************************************************
// Component | Responsive Field (wrapper)
//*************************************************************************************************

$labelWidth: 10rem;
$numericWidth: 10rem;

.themefield {
	@include themeborder(grayMedium);
	border: 0.1rem solid transparentize($color: $black, $amount: 0.5);
	border-radius: $globalRadius;
	display: flex;
	flex-direction: row;
	font-size: $globalFontSize;
	margin-bottom: 0.5rem;

	@include respond-below(sm) {
		flex-direction: column;

		.themefield--label {
			align-self: flex-start;
			flex: 0 0 auto;
			text-align: left;
		}
	}

	.themefield--label {
		@include themecolor(grayLight);
		align-items: center;
		background-color: transparentize($color: $black, $amount: 0.7);
		border-bottom-left-radius: $globalRadius;
		border-top-left-radius: $globalRadius;
		color: $grayLight;
		cursor: pointer;
		display: flex;
		flex: 0 0 $labelWidth;
		font-weight: 500;
		padding: 0 0.3rem;
		padding-right: 0.5rem;
		text-align: left;
	}

	.themefield--content {
		display: flex;
		flex: 1 1 auto;

		& > div:first-child {
			flex: 1 1 auto;
			width: 100%;
		}
	}

	&.isNumeric {
		max-width: $numericWidth + $labelWidth;
	}

	&.isDisabled {
		@extend %disabled;
	}

	&.hasError {
		color: $errorColor;
		font-weight: 700;
		margin-bottom: 0;

		& + .themefield--error {
			color: $errorColor;
			font-weight: 700;
			margin-bottom: 0.5rem;
			margin-left: ($labelWidth + 0.5rem - 0.2rem);
			padding: 0.2rem;

			@include respond-below(sm) {
				margin-left: 0;
			}
		}
	}
}

//****************************************************************************
// Component | TextInput
//****************************************************************************

$inputFontSize: 1rem;

.themeinput {
	@include themecolor(grayLight);
	background: none;
	color: $grayLight;
	display: flex;
	flex: 1 1 auto;
	font-size: $globalFontSize;
	outline: none;
	padding: 0.35rem 0.5rem;
	position: relative;
	width: 100%;

	&:focus {
		@include focusEffect();
	}

	.isNumeric & {
		max-width: 10rem;
		text-align: right;
	}

	.hasError & {
		background-color: transparentize($color: $errorColor, $amount: 0.2);
	}

	.isDisabled & {
		@extend %disabled;
	}
}

.themeinput--wrapper {
	margin-bottom: 0.5rem;
}

.themeinput--label {
	display: block;
}

.themeinput--content {
	display: flex;
}

//****************************************************************************
// Component | Text input -> Material
//****************************************************************************

$maxFieldWidth: 30rem;

.themeinput--material {
	margin: 1rem 0 0.5rem;
	max-width: $maxFieldWidth;
	position: relative;

	input {
		@include themecolor(grayLight);
		@include themeborder(grayMedium);
		background: none;
		border: none;
		border-bottom: 0.1rem solid $grayMedium;
		color: $grayLight;
		display: block;
		font-size: 1rem;
		outline: none;
		padding: 0.35rem;
		width: 100%;
	}

	input:focus {
		outline: none;
	}

	label {
		@include themecolor(grayMedium);
		color: $grayMedium;
		font-size: 0.9rem;
		font-weight: normal;
		left: 0.35rem;
		pointer-events: none;
		position: absolute;
		top: 0.7rem;
		transition: 0.2s ease all;
	}

	input:focus + label,
	&.hasContent input + label {
		@include themecolor(main);
		color: $main;
		font-size: 0.8rem;
		top: -0.7rem;
	}

	&.hasError > input {
		border-color: $errorColor;

		& + label {
			border: $errorColor;
			color: $errorColor;
			font-weight: 900;

			& + .bar::before {
				background: $errorColor;
			}
		}
	}

	&.isDisabled {
		@extend %disabled;
	}

	.bar {
		display: block;
		max-width: 100%;
		position: relative;
		width: 100%;
	}

	.bar::before {
		@include themebackground(main);
		background-color: $main;
		bottom: 0;
		content: '';
		height: 0.15rem;
		left: 0;
		position: absolute;
		transition: 0.15s ease all;
		width: 0;
	}

	/* active state */
	input:focus ~ .bar::before {
		width: 100%;
	}

	input:required {
		box-shadow: none;
	}
}

//****************************************************************************
// Component | Textarea
//****************************************************************************

.themetextarea {
	@include themecolor(grayLight);
	@include themeborder(grayMedium);
	background: none;
	border: none;
	color: $grayLight;
	font-size: 1rem;
	max-height: 30rem;
	min-height: 4rem;
	padding: 0.5rem;
	resize: vertical;
	width: 100%;
}

.themetextarea--wrapper {
	margin-bottom: 0.5rem;
}

.themetextarea--label {
	display: block;
}

.themetextarea--content {
	display: flex;
}

//****************************************************************************
// Component | Image with caption
//****************************************************************************

.imageCaptionWrapper {
	background-color: $black;
	position: relative;

	&.lg {
		max-width: 700px;
	}

	&.md {
		max-width: 500px;
	}

	&.sm {
		max-width: 300px;
	}

	&:hover {
		.imageCaption {
			min-height: 25%;
			opacity: 1;
			visibility: visible;
		}

		.imageWithCaption {
			opacity: 0.8;
			width: 100%;
		}
	}

	.imageWithCaption {
		transition: opacity 0.2s linear;
		width: 100%;
	}

	.imageCaption {
		@include flex-column();
		background-color: rgba(0, 0, 0, 0.7);
		bottom: 0;
		color: $grayLight;
		left: 0;
		line-height: 1.3;
		min-height: 10%;
		opacity: 0;
		padding: 1rem;
		position: absolute;
		transition: opacity 0.2s linear, min-height 0.2s linear;
		visibility: hidden;
		width: 100%;

		b {
			display: inline-block;
			margin-bottom: 0.5rem;
		}
	}
}

//****************************************************************************
// Component | Checkbox
//****************************************************************************

$checkboxSize: 1.8rem;

.themecheckbox {
	& > input[type='checkbox'] {
		left: -999rem;
		position: absolute;

		&:focus + label {
			@include focusEffect;
		}

		&:disabled + label {
			color: lighten($black, 40%);
			cursor: default;

			&::before {
				background-color: lighten($black, 80%);
				border: 0.1rem solid lighten($black, 80%);
				border-color: lighten($black, 80%);
			}

			&::after {
				color: lighten($black, 40%);
			}
		}
	}

	[type='checkbox'] + label {
		@extend %radioCheckboxSharedProperties;
		min-height: 1.8rem;
		padding: 0.5rem 0.5rem 0.5rem 2.9rem;

		&:hover {
			@include themebackground(grayBlack);
			background-color: $grayBlack;
		}

		//bg
		&::before {
			@include themeborder(main);
			background: none;
			border: 0.1rem solid $main;
			box-shadow: $globalShadow;
			content: '';
			height: $checkboxSize;
			left: 0.5rem;
			position: absolute;
			transition: opacity 0.2s;
			width: $checkboxSize;
		}

		//checkmark
		&::after {
			@include themecolor(tertiary);
			color: $tertiary;
			content: '✔';
			font-size: 1.5rem;
			left: 0.8rem;
			line-height: 1.8;
			position: absolute;
			transition: opacity 0.2s;
		}
	}

	[type='checkbox']:not(:checked) + label::after {
		opacity: 0;
	}

	[type='checkbox']:checked + label {
		&::after {
			opacity: 1;
		}

		&::before {
			@include themebackground(main);
			background-color: $main;
		}
	}
}

//****************************************************************************
// Component | heading with variants
//****************************************************************************

.themeheading {
	color: $main;
	display: block;

	& > .icon {
		margin-right: 0.5rem;
	}

	&.xs {
		font-size: 1rem;
	}

	&.sm {
		font-size: 1.25rem;
	}

	&.md {
		font-size: 1.5rem;
	}

	&.lg {
		font-size: 2rem;
	}

	&.xl {
		font-size: 2, 5rem;
	}

	&.padded {
		padding: 0.5rem;
	}

	&.inline {
		display: inline;
		margin: 0;
	}

	&.negative {
		background-color: $grayDark;
		color: $grayLight;
	}

	&.spacing-above {
		margin-top: 1rem;
	}

	&.underlined {
		border-bottom: 0.1rem solid $main;
		margin-bottom: 0.5rem;
		padding-bottom: 0.5rem;
	}
}

// heading size
h2.themeheading {
	font-size: 1.5rem;
}

h3.themeheading {
	font-size: 1.15rem;
}

h4.themeheading {
	font-size: 1rem;
}

h5.themeheading {
	font-size: 0.95rem;
}

//****************************************************************************
// Component | Close button (animated x-mark)
//****************************************************************************

.close-button {
	@include themebackground(grayBlack);
	@include themeborder(grayBlack);
	align-items: center;
	background-color: $grayBlack;
	border: 0.1rem solid $grayBlack;
	border-radius: $globalRadius;
	display: flex;
	flex-direction: column;
	height: 1.5rem;
	justify-content: center;
	min-width: 2rem;
	position: relative;
	transition: background-color 0.6s;
	width: auto;

	&.noborder {
		border: initial !important;
	}

	&.light {
		background: none;
	}

	&:hover {
		@include themebackground(alt);
		background-color: $alt;
	}

	&::before,
	&::after {
		@include themebackground(grayDarkAlt);
		background-color: $grayDarkAlt;
		content: '';
		display: block;
		height: 0.3rem;
		position: absolute;
		transform: rotate(-45deg);
		transition: all 0.4s ease-out;
		width: 1.2rem;
	}

	&::after {
		transform: rotate(45deg);
	}

	&:hover::before,
	&:hover::after {
		background-color: $white;
		transform: rotate(0deg);
	}
}

//*************************************************************************************************
// Component | Tags / Generics
//*************************************************************************************************

$tagColorPublic: rgb(17, 104, 17);
$tagColorShared: rgb(13, 109, 109);
$tagColorPrivate: rgb(61, 52, 150);

@mixin activeColorTag($color) {
	background-color: $color;
	border-radius: $globalRadius;
	color: $grayLight;
	cursor: pointer;
	font-weight: 600;
	padding: 0.2rem 0.5rem;
	transition: color 0.15s;
	user-select: none;

	&:hover {
		color: adjust-hue($color: $color, $degrees: -25%);
	}
}

@mixin activeBgTag($color) {
	background-color: $color;
	transition: background-color 0.15;

	&:hover {
		background-color: darken($color, 20%);
	}
}

// interactive (textcolor)
.tag--link {
	@include activeColorTag($link);
}

.interactable {
	@include activeColorTag($grayBlack);
}

.tag--public {
	@include activeColorTag($tagColorPublic);
}

.tag--private {
	@include activeColorTag($tagColorPrivate);
}

.tag--shared {
	@include activeColorTag($tagColorShared);
}

.tag--interactive {
	@include activeColorTag($link);
}

// plain bg
.generic--bg--private {
	@include activeBgTag($tagColorPrivate);
}

.generic--bg--public {
	@include activeBgTag($tagColorPublic);
}

.generic--bg--shared {
	@include activeBgTag($tagColorShared);
}

.tag--bg--interactive {
	@include activeBgTag($link);
}

// plain color
.generic--warning {
	color: $warnColor;
	font-weight: 700;
}

.generic--error {
	color: $warnColor;
	font-weight: 700;
}

.generic--info {
	color: $infoColor;
}

.generic--public {
	color: $tagColorPublic;
}

.generic--shared {
	color: $tagColorShared;
}

.generic--private {
	color: $tagColorPrivate;
}

//****************************************************************************
// Component | Tabs
//****************************************************************************

.tabs {
	.tab-titles {
		border-bottom: 0.1rem solid $main;

		.tab-title {
			background-color: transparentize($color: $grayDark, $amount: 0.5);
			border: 0.1rem solid $grayMedium;
			color: $grayLight;
			font-size: 1rem;
			padding: 0.2rem 0.65rem;
			transition: background-color 0.2s;

			& + .tab-title {
				margin-left: 0.5rem;
			}

			&.active {
				color: $main;
			}

			&:hover {
				background-color: $main;
				box-shadow: $globalShadow;
				color: $white;
			}

			&:focus {
				@include focusEffect();
			}

			&:last-child {
				border-top-right-radius: 0.5rem;
			}

			&:first-child {
				border-top-left-radius: 0.5rem;
			}
		}
	}

	.tab-content {
		padding: 1rem;
	}
}

//****************************************************************************
// Component | Notice (emphasis)
//****************************************************************************

.emphasis-wrapper {
	border: 0.1rem solid $grayDark;
	border-radius: $globalRadius;
	display: flex;
	justify-content: center;
	min-height: 2.5rem;
	padding: 0.35rem;

	&.negative {
		background-color: $grayDark;
		border-color: $grayDark;
		color: $grayLight;
	}
}

//****************************************************************************
// Component | Progress bar
//****************************************************************************

$smallProgressBarHeight: 0.5rem;
$bigProgressBarHeight: 1.5rem;

.themeprogress {
	background: rgba(0, 0, 0, 0.6);
	border: 0.1rem solid $grayDarkAlt;
	border-radius: $globalRadius;
	box-shadow: $globalShadow;
	display: flex;
	height: $smallProgressBarHeight;
	justify-content: space-between;
	position: relative;

	&.thick {
		height: $bigProgressBarHeight;

		span {
			display: inline-block;
			height: $bigProgressBarHeight;
			line-height: $bigProgressBarHeight;
			padding: 0 0.5rem;
			pointer-events: none;
			position: static;
			text-shadow: 0 0 0.1rem black;
			z-index: 1;
		}
	}

	&.warning {
		.themeprogress--fill {
			background: linear-gradient(to right, $errorColor, $warnColor);
		}
	}

	.themeprogress--fill {
		-webkit-animation: ScrollBackground 3s infinite;
		-moz-animation: ScrollBackground 3s infinite;
		-o-animation: ScrollBackground 3s infinite;
		animation: ScrollBackground 3s ease infinite;
		background: linear-gradient(to right, $successColor 0%, adjust-hue($successColor, 65%));
		background-size: 200%;
		border-radius: $globalRadius;
		height: 100%;
		position: absolute;
		transition: width 0.2s ease-in-out;
		z-index: 0;
	}
}

// animation
@keyframes ScrollBackground {
	0% {
		background-position: 0% 50%;
	}

	50% {
		background-position: 100% 50%;
	}

	100% {
		background-position: 0% 50%;
	}
}

//****************************************************************************
// Component | Button
//****************************************************************************

.themebutton {
	@include themebackground(main);
	background-color: $main;
	border: 0.15rem solid transparent;
	box-shadow: $globalShadow;
	color: #fff;
	font-size: 1rem;
	font-weight: 700;
	line-height: 1.2;
	min-height: 1.8rem;
	min-width: 6rem;
	padding: 0.2rem 0.35rem;
	text-align: center;
	transition: background-color 0.2s;
	width: auto;

	&:hover {
		@include themebackground(grayBlack);
		@include themecolor(white);
		background-color: $black;
		color: $white;
	}

	&:focus {
		@include focusEffect;
		@include themeborder(white);
		border: 0.15rem solid $white;

		&::-moz-focus-inner {
			border: 0;
		}
	}

	&:disabled {
		cursor: not-allowed;
		filter: grayscale(90%);
		opacity: 0.7;
		pointer-events: none;
	}

	&.rounded {
		border-radius: 1rem;
	}

	&.dark {
		background-color: $grayBlack;
	}

	&.uppercase {
		text-transform: uppercase;
	}

	&.wide {
		display: block;
		width: 100%;
	}

	// space between if repeated buttons
	& + .themebutton {
		margin-left: 0.5rem;
	}

	// space if icon and text used together
	& > span:nth-child(2) {
		margin-left: 0.5rem;
	}
}

//****************************************************************************
// Component | chekcbox (Slider-variant)
//****************************************************************************

$sliderSize: 1.3rem;
$sliderBoxSize: 1.3rem;

.themeslider {
	input[type='checkbox'] {
		left: -999rem;
		position: absolute;

		&:focus + label {
			@include focusEffect;
		}

		&:disabled + label {
			color: lighten($black, 80%);
			cursor: default;

			&::before {
				background-color: lighten($black, 40%);
				border: 0.15rem solid lighten($black, 40%);
			}

			&::after {
				background-color: lighten($black, 80%);
				color: lighten($black, 80%);
			}
		}
	}

	[type='checkbox'] + label {
		@extend %radioCheckboxSharedProperties;
		min-height: 1.8rem;
		padding: 0.35rem 0.35rem 0.35rem 4.7rem;

		&:hover {
			@include themebackground(grayBlack);
			background-color: $grayBlack;
		}

		//background
		&::before {
			@include themeborder(grayMedium);
			@include themebackground(grayBlack);
			background-color: $grayBlack;
			border: 0.2rem solid $grayMedium;
			border-radius: $sliderBoxSize;
			box-shadow: $globalShadow;
			content: '';
			height: $sliderBoxSize;
			left: 0.45rem;
			position: absolute;
			transition: background-color 0.2s;
			width: $sliderBoxSize * 2;
		}

		//slidebutton
		&::after {
			@include themebackground(tertiary);
			background-color: $tertiary;
			border-radius: $sliderSize;
			content: '';
			font-size: 1.5rem;
			height: $sliderSize;
			position: absolute;
			transition: left 0.2s, background-color 0.2s;
			width: $sliderSize;
		}
	}

	[type='checkbox']:not(:checked) + label::after {
		left: 0.65rem;
	}

	[type='checkbox']:checked + label {
		&::after {
			@include themebackground(tertiary);
			background-color: $tertiary;
			left: $sliderBoxSize + 0.55rem;
		}

		&::before {
			@include themebackground(main);
			@include themeborder(main);
			background-color: $main;
			border-color: $main;
		}
	}
}

//****************************************************************************
// Component | Radiobutton
//****************************************************************************

$radioSize: 1.5rem;

.themeradio {
	[type='radio'] {
		left: -999rem;
		position: absolute;

		&:focus + label {
			@include focusEffect;
		}

		&:disabled + label {
			color: lighten($black, 40%);
			cursor: default;

			&::before {
				background-color: lighten($black, 80%);
				border: 0.1rem solid lighten($black, 80%);
				border-color: lighten($black, 80%);
			}

			&::after {
				color: lighten($black, 40%);
			}
		}
	}

	//label
	[type='radio'] + label {
		@extend %radioCheckboxSharedProperties;
		min-height: $radioSize;
		padding: 0.5rem 0.5rem 0.5rem 2.5rem;

		&:hover {
			@include themebackground(grayBlack);
			background-color: $grayBlack;
		}

		//bg
		&::before {
			@include themeborder(main);
			background: none;
			border: 0.15rem solid $main;
			border-radius: $radioSize;
			box-shadow: $globalShadow;
			content: '';
			height: $radioSize;
			left: 0.5rem;
			position: absolute;
			transition: background-color 0.2s;
			width: $radioSize;
		}
	}

	[type='radio']:checked + label {
		&::before {
			@include themebackground(tertiary);
			background-color: $tertiary;
		}
	}
}

//****************************************************************************
// Component | Spacing elements
//****************************************************************************

// line - spacings
.line-thin {
	@include themeborder(main);
	border-bottom: 0.1rem solid $main;
	display: block;
	height: 0.1rem;
	margin: 0.7rem 0;
}

.line-thick {
	@include themeborder(main);
	border-bottom: 0.3rem solid $main;
	display: block;
	height: 0.2rem;
	margin: 0.7rem 0;
}

// empty space - spacings
.spacing {
	@extend %clearfix;
	display: block;
	height: 0.1rem;
	margin-bottom: 0.8rem;

	&.lg {
		margin-bottom: 1.6rem;
	}

	&.xl {
		margin-bottom: 3rem;
	}
}

//****************************************************************************
// Component | Loader
//****************************************************************************

.loader,
.loader::before,
.loader::after {
	-webkit-animation: load7 1.8s infinite ease-in-out;
	animation: load7 1.8s infinite ease-in-out;
	-webkit-animation-fill-mode: both;
	animation-fill-mode: both;
	border-radius: 50%;
	height: 2.5em;
	width: 2.5em;
}

.loader {
	-webkit-animation-delay: -0.16s;
	animation-delay: -0.16s;
	color: #fff;
	font-size: 10px;
	margin: 80px auto;
	position: relative;
	text-indent: -9999em;
	-webkit-transform: translateZ(0);
	-ms-transform: translateZ(0);
	transform: translateZ(0);
}

.loader::before,
.loader::after {
	content: '';
	position: absolute;
	top: 0;
}

.loader::before {
	-webkit-animation-delay: -0.32s;
	animation-delay: -0.32s;
	left: -3.5em;
}

.loader::after {
	left: 3.5em;
}
@-webkit-keyframes load7 {
	0%,
	80%,
	100% {
		box-shadow: 0 2.5em 0 -1.3em;
	}

	40% {
		box-shadow: 0 2.5em 0 0;
	}
}
@keyframes load7 {
	0%,
	80%,
	100% {
		box-shadow: 0 2.5em 0 -1.3em;
	}

	40% {
		box-shadow: 0 2.5em 0 0;
	}
}

//****************************************************************************
// Component | Wizard path
//****************************************************************************

$line-width: 0.3rem;
$bullet-size: 1.5rem;

ol.wizard-path {
	@include flex-row;
	justify-content: space-between;
	min-height: 1.8rem;
	overflow: hidden;
	position: relative;

	li {
		align-items: center;
		display: flex;
		flex: 1 1 auto;
		justify-content: center;
		position: relative;
		text-align: center;

		.bullet {
			@include themebackground(main);
			@include themeborder(main);
			background-color: $main;
			border: $line-width/1.3 solid $main;
			border-radius: $bullet-size;
			height: $bullet-size;
			position: relative;
			text-align: center;
			transition: border-color 0.5s;
			width: $bullet-size;
			z-index: 1;
		}

		& + li::after {
			@include themebackground(main);
			background-color: $main;
			content: '';
			display: block;
			height: $line-width;
			left: -50%;
			position: absolute;
			top: $bullet-size / 2;
			transition: background-color 0.5s;
			width: 100%;
			z-index: 0;
		}
	}

	li.current ~ li::after {
		@include themebackground(grayBlack);
		background-color: $grayBlack;
	}

	li.current ~ li .bullet {
		@include themebackground(grayDarkAlt);
		@include themeborder(grayBlack);
		background-color: $grayDarkAlt;
		border-color: $grayBlack;
	}

	li.current > .bullet {
		@include themebackground(tertiary);
		background-color: $tertiary;
		box-shadow: $globalShadow;
	}
}

//****************************************************************************
// Error tooltip
//****************************************************************************

[data-tooltip-error]::before {
	@include themebackground(grayBlack);
	background-color: $grayBlack;
	border-radius: 0 0 0.5rem 0.5rem;
	color: $errorColor;
	content: attr(data-tooltip-error);
	height: auto;
	left: 0;
	opacity: 0;
	padding: 0.5rem;
	pointer-events: none;
	position: absolute;
	top: 100%;
	transition: opacity 0.15s ease-in-out, visibility 0.15s ease-in-out;
	visibility: hidden;
	width: 100%;
	z-index: 300;
}

[data-tooltip-error]:hover::before {
	opacity: 1;
	visibility: visible;
}

//****************************************************************************
// Component | infotip
//****************************************************************************

$tipWidth: 2rem;
$tipMessageWidth: 14rem;

.tip {
	align-items: center;
	display: inline-flex;
	font-size: 1rem;
	justify-content: center;
	opacity: 0.2;
	padding: 0.5rem 1rem;
	position: relative;
	transition: color 0.2s, opacity 0.2s;
	width: $tipWidth;

	&:hover {
		@include themecolor(main);
		color: $main;
		opacity: 1;

		//show tip message on hover
		.tip-message::before,
		.tip-message::after {
			opacity: 1;
			visibility: visible;
		}
	}

	.tip-message {
		//content
		&::before {
			@include themebackground(grayBlack);
			background-color: $grayBlack;
			border-radius: 0.5rem;
			bottom: 120%;
			color: $infoColor;
			content: attr(data-tooltip-info);
			height: auto;
			left: -($tipMessageWidth/2 - $tipWidth/2);
			opacity: 0;
			padding: 0.5rem;
			pointer-events: none;
			position: absolute;
			transition: opacity 0.15s ease-in-out, visibility 0.15s ease-in-out;
			visibility: hidden;
			width: $tipMessageWidth;
			z-index: 300;
		}

		//arrow
		&::after {
			border-color: $grayBlack transparent transparent transparent;
			border-style: solid;
			border-width: 7px;
			content: '';
			margin-left: -5px;
			opacity: 0;
			position: absolute;
			right: 0.55rem;
			top: -20%;
			transition: opacity 0.15s ease-in-out, visibility 0.15s ease-in-out,
				transform 0.2s cubic-bezier(0.71, 1.7, 0.77, 1.24);
			visibility: hidden;
		}
	}
}

//text inside input field special case
.themeinput .tip {
	bottom: 0;
	position: absolute;
	right: 0;
}

.themeinput > input:focus ~ .tip {
	@include themecolor(main);
	color: $main;
	opacity: 1;

	.tip-message::before,
	.tip-message::after {
		opacity: 1;
		visibility: visible;
	}
}

//****************************************************************************
// Component | Modal
//****************************************************************************

$modalCloseBtnSize: 2rem;

.fade--backdrop {
	align-items: center;
	background-color: rgba(0, 0, 0, 0.75);
	bottom: 0;
	display: flex;
	justify-content: center;
	left: 0;
	position: fixed;
	right: 0;
	top: 0;
	transition: 0.5 background-color;
	z-index: 999;

	// MODAL

	.thememodal {
		@include flex-column;
		@include themeborder(main);
		align-self: flex-start;
		background-color: $grayDarkAlt;
		border: 0.4rem solid $main;
		border-radius: $globalRadius;
		box-shadow: 0 0 0.5rem $grayBlack;
		margin: 1rem;
		margin-top: 5%;
		min-height: 11rem;
		padding: 1rem;
		position: relative;
		width: 100%;

		&.xl {
			max-width: 58rem;
		}

		&.lg {
			max-width: 50rem;
		}

		&.md {
			max-width: 40rem;
		}

		&.sm {
			max-width: 30rem;
		}

		.close-button {
			@include size($modalCloseBtnSize);
			border-radius: 100%;
			position: absolute;
			right: -($modalCloseBtnSize/2);
			top: -($modalCloseBtnSize/2);
		}

		.thememodal--heading .themeheading {
			font-size: 1.5rem;
			font-weight: 700;
			margin: 0.8rem;
			text-align: center;
		}

		.thememodal--content {
			@include flex-column;
			flex: 1 1 auto;

			.thememodal--fill {
				flex: 1 1 auto;
			}
		}
	}

	// CONFIRMATION
	&.confirmPopUp {
		@include flex-center();

		.thememodal {
			align-self: center;
			margin: none;
			max-width: 25rem;
			min-height: 10rem;
			width: 25rem;

			.thememodal--content {
				text-align: center;

				.thememodal--fill {
					@include flex-column;
					justify-content: center;
				}
			}
		}
	}
}

body.modalIsOpen {
	overflow-y: hidden;
}

.product--modal {
	display: flex;
	flex-direction: column;
	min-height: 75vh;

	.tabs {
		flex: 1 1 auto;
	}

	.row-flex {
		flex: 0 0 auto;
	}
}

//****************************************************************************
// Component | File upload
//****************************************************************************

.upload--preview {
	@include flex-center();
	border: 0.4rem dotted $grayMedium;
	border-radius: $globalRadius * 2;
	margin: 0.5rem;
	min-height: 10rem;
	padding: 1.4rem;
	position: relative;
	transition: border-color 0.2s, color 0.2s;
	width: 100%;

	&:hover {
		border-color: $link;
		color: $link;
	}

	.upload--preview--noImage {
		@include flex-center();
		line-height: 1.1;
		text-align: center;

		.fas {
			font-size: 2.2rem;
			margin-bottom: 0.5rem;
		}
	}

	.upload--preview--image {
		display: block;
		max-height: 20rem;
		max-width: 100%;
		pointer-events: none;
		width: auto;
	}

	input[type='file'] {
		display: none;
	}
}

.button--upload {
	input {
		display: none;
	}
}

//****************************************************************************
// Component | Flex Table
//****************************************************************************

.item-link {
	cursor: pointer;
}

.flex-table {
	border: 0.1rem solid transparentize($color: $grayBlack, $amount: 0.8);
	border-radius: $globalRadius;
	box-shadow: $globalShadow;
	display: flex;
	flex-direction: column;

	.table-row:nth-child(odd) {
		background-color: $grayDarkAlt;
	}

	.table-row:first-child {
		border-top-left-radius: $globalRadius;
		border-top-right-radius: $globalRadius;
	}

	.table-row:last-child {
		border-bottom-left-radius: $globalRadius;
		border-bottom-right-radius: $globalRadius;
	}
}

.table-row {
	@include flex-row;
	@include themeborder(grayBlack);
	background-color: $grayDark;
	border-bottom: 0.1rem solid $grayBlack;
	position: relative;

	&:last-child {
		border: none;
	}

	& > div {
		@include themeborder(grayBlack);
		border-right: 0.1rem solid $grayBlack;

		&:last-child {
			border: none;
		}
	}

	&:hover,
	&:nth-child(odd):hover {
		background-color: #c5ff571a;
	}

	//completed (special style)
	&.complete {
		.cell-status {
			@include themecolor(main);
			color: $main;
		}

		.cell-auto {
			@include themecolor(grayMedium);
			color: $grayMedium;
		}
	}
}

.cell-15px {
	@include flex-cell(0, 0, 1rem);
}

.cell-30px {
	@include flex-cell(0, 0, 2rem);
}

.cell-60px {
	@include flex-cell(0, 0, 4rem);
}

.cell-120px {
	@include flex-cell(0, 0.5, 8rem);
}

.cell-200px {
	@include flex-cell(0, 0.5, 14rem);
}

.cell-auto {
	@include flex-cell(1, 1, 20rem);
}

.cell-status {
	@include flex-cell(0, 0, 3rem);
	display: flex;
	flex-direction: row;
	justify-content: center;

	.fa {
		font-size: 1.5rem;
	}
}

.cell-symbol {
	@include flex-cell(0, 0, 2rem);
}

.cell-name {
	@include flex-cell(0, 0.5, 12rem);
}

.cell-type {
	@include flex-cell(0, 0.5, 8rem);
}

.cell-desc {
	@include flex-cell(1, 1, 18rem);
}

.cell-tags {
	@include flex-cell(1, 1, 300px);
}

.cell-id {
	@include flex-cell(0, 0, 60px);
}

//*******************************************************************************************************************************************************
// Plugin overwrites
//******************************************************************************************************************************************************

//****************************************************************************
// Plugin (style overwrite) | React-Select
//****************************************************************************

.Select-control {
	@include themebackground(grayDark);
	background: none !important;
	border: none;
	box-shadow: none;
	color: $grayLight;
	// border: .05rem solid $grayMedium;
	// @include themeborder(grayMedium);

	.Select-value {
		@include themecolor(grayLight);
		@include themeborder(grayMedium);
		border-color: $grayMedium;
		color: $link;
		margin-top: 3px;

		.Select-value-label {
			color: $grayLight !important;
		}
	}

	.Select-value-icon {
		@include themeborder(grayMedium);
		border-color: $link;
	}
}

.Select-menu-outer {
	@include themecolor(grayLight);
	@include themebackground(grayDarkAlt);
	background: $grayDarkAlt;
	color: $grayLight;
}

//****************************************************************************
// Plugin (style overwrite) | React-Daypicker
//****************************************************************************

.DayPickerInput {
	input {
		background: none;
		border: none;
	}
}

//****************************************************************************
// Plugin (style overwrite) | Toastr => Notifications
//****************************************************************************

#toast-container {
	.toast {
		max-width: 35rem;
		min-width: 25rem;
	}

	.toast.succes {
		@include themebackground(main);
		background-color: $main;
	}

	.toast-message {
		line-height: 1.2;
	}
}

//*******************************************************************************************************************************************************
// Layout Elements
//******************************************************************************************************************************************************

//****************************************************************************
// Layout
//****************************************************************************

.body--layout {
	@include themecolor(grayLight);

	color: $grayLight;

	display: flex;
	flex-direction: column;
	height: auto;
	min-height: 100vh;
}

.login {
	@include flex-center();
	@include themecolor(grayLight);
	background: radial-gradient($grayDarkAlt, $grayDark);
	background-color: $grayBlack;
	color: $grayLight;
	height: auto;
	min-height: 100vh;

	.login--window {
		@include themebackground(grayDarkAlt);
		@include themeborder(main);
		background-color: $grayDark;
		border: 0.35rem solid $main;
		box-shadow: $globalShadow;
		max-width: 25rem;
		width: 100%;

		.login--window--title {
			display: flex;
			justify-content: center;
			margin-top: 1rem;
		}

		.login--window--content {
			display: flex;
			flex-direction: column;
			padding: 2rem;

			.input-text {
				text-align: center;
				width: 100%;
			}

			.loginBtn {
				margin-top: 3rem;
			}

			.forgot-pass {
				display: flex;
				justify-content: center;
				padding: 1.5rem 0;
			}
		}
	}
}

.content-layout {
	display: flex;
	flex: 1 1 auto;
	flex-direction: row;
}

nav.navigation {
	@include themeborder(grayBlack);
	@include themebackground(grayDark);
	background-color: $grayDark;
	border-right: 0.05rem solid $grayBlack;
	flex: 0 0 15rem;
	height: auto;
	transition: $globalTransitionColors;
}

main.main {
	@include themebackground(grayDarkAlt);
	background-color: $grayDarkAlt;
	flex: 1 1 auto;
	height: auto;
	transition: $globalTransitionColors;
}

footer.footer {
	@include themeborder(grayBlack);
	@include themebackground(grayDarkAlt);
	background-color: $grayDarkAlt;
	border-top: 0.05rem solid $grayBlack;
	padding: 0.4rem;
	text-align: center;
	transition: $globalTransitionColors;
}

//****************************************************************************
// Navigation
//****************************************************************************

nav.navigation {
	@include respond-below(lg) {
		flex: 0 0 5rem;
	}

	@include respond-below(sm) {
		flex: 0 0 2.5rem;
	}
	//navigation wrapper
	.navi-list {
		display: flex;
		flex-direction: column;
		list-style: none;
		position: sticky;
		top: 0;
		width: 100%;
	}

	//navi group title
	.navi-heading {
		color: $grayBlack !important;
	}

	//single nav item (li)
	.navi-item {
		margin: 0;

		& > a {
			@extend %bgAndColorTransition;
			@include themecolor(grayLight);
			align-items: center;
			border-bottom: 0.15rem solid transparent;
			border-top: 0.15rem solid transparent;
			color: $grayLight;
			display: flex;
			font-size: 1rem;
			font-weight: 400;
			justify-content: space-between;
			padding: 0.6rem;
			text-align: left;
			white-space: nowrap;

			@include respond-below(lg) {
				border: 0.15rem solid transparent;
				padding: 1rem 0.7rem;
				text-align: center;

				&:hover {
					@include themeborder(main);
					border: 0.15rem solid $main;
				}

				.fa,
				.fas {
					flex: 1 1 auto;
					font-size: 1.5rem;
				}

				.pagename {
					display: none;
				}
			}

			&:focus {
				@include focusEffect;
			}

			&:hover {
				@include themeborder(main);
				@include themecolor(main);
				border-bottom-color: $main;
				border-top-color: $main;
				color: $main;
			}

			&.active {
				@include themebackground(main);
				background-color: $main;
				color: $white;

				&:hover {
					color: $white;
				}
			}

			.fa,
			.fas,
			.far {
				flex: 0 0 4rem;
				font-size: 1.2rem;
				text-align: center;
			}

			.pagename {
				flex: 1 1 auto;
			}
		}
	}
}

//****************************************************************************
// Footer
//****************************************************************************

footer {
	a,
	a:link {
		@include themecolor(grayMedium);
		color: $grayMedium;
	}
}

//*******************************************************************************************************************************************************
// Pages
//******************************************************************************************************************************************************

//****************************************************************************
// Page | Dashboard
//****************************************************************************

.server-statistics {
	@include flex-row;

	.statistic {
		@include flex-center;
		@include themeborder(grayBlack);
		@include themebackground(grayDark);
		background-color: $grayDark;
		border: 0.1rem solid $main;
		flex: 1 1 auto;
		margin: 0.5rem;
		min-height: 10rem;
		padding: 1rem;
		text-align: center;

		.phrase {
			font-size: 1.2rem;
		}

		.counter {
			@include themecolor(alt);
			color: $alt;
			font-weight: 900;
		}
	}
}

.dashboard {
	display: flex;
	flex-wrap: wrap;
	justify-content: space-between;
	min-height: 60vh;
	width: 100%;

	a.dash-item {
		@include themeborder(grayBlack);
		@include themebackground(grayDark);
		background-color: $grayDark;
		border: 0.05rem solid $grayBlack;
		box-shadow: $globalShadow;
		display: flex;
		flex: 1 0 10rem;
		flex-direction: column;
		justify-content: center;
		margin: 0.5rem;
		transition: background-color 0.2s;

		&:hover {
			@include themebackground(main);
			@include themecolor(white);
			background-color: $main;
			color: $white;
		}

		.pagesymbol {
			font-size: 3.3rem;
			padding: 1rem;
			text-align: center;
		}

		.pagetitle {
			font-weight: 400;
			padding: 1rem;
			text-align: center;
		}
	}
}

//****************************************************************************
// Page | Complex example page
//****************************************************************************

.Complex--wrapper {
	.product-placeholder {
		background-color: $grayDark;
		border-radius: $globalRadius;
		box-shadow: $globalShadow;
		color: $grayLight;
		padding: 1rem;
		text-align: center;
	}

	.type-label {
		background-color: $main;
		border-radius: $globalRadius;
		color: $white;
		margin-left: 0.5rem;
		padding: 0.2rem 0.5rem;
	}
}

.avatar--grid {
	background-color: $grayBlack;
	display: grid;
	grid-template-columns: 25% 25% 25% 25%;
	margin: 1rem 0;

	.avatar {
		object-fit: cover;
		padding: 0.2rem;
		position: relative;

		&.selected {
			border: 0.15rem solid $main;

			&::after {
				@include themecolor(main);
				@include flex-center();
				color: $main;
				content: '✔';
				font-size: 2.5rem;
				padding: 0.25rem;
				position: absolute;
				right: 0;
				text-shadow: 0 0 5px black;
				top: 0;
			}
		}
	}
}

//****************************************************************************
// Page | CoinFlipper
//****************************************************************************

.coinHeading {
	h3 {
		background-color: $grayBlack;
		border: 0.1rem solid $main;
		color: $grayMedium;
		font-size: 1.5rem;
		padding: 1rem;
		text-align: center;
	}
}

@keyframes flipHeads {
	from {
		-webkit-transform: rotateY(0);
		-moz-transform: rotateY(0);
		transform: rotateY(0);
	}

	to {
		-webkit-transform: rotateY(1800deg);
		-moz-transform: rotateY(1800deg);
		transform: rotateY(1800deg);
	}
}
@keyframes flipTails {
	from {
		-webkit-transform: rotateY(0);
		-moz-transform: rotateY(0);
		transform: rotateY(0);
	}

	to {
		-webkit-transform: rotateY(1980deg);
		-moz-transform: rotateY(1980deg);
		transform: rotateY(1980deg);
	}
}

.coinFlipWrap {
	@include flex-center();

	.coin {
		@include size(12rem);
		@include flex-center();
		background-color: $grayBlack;
		border: 0.2rem solid $main;
		border-radius: 50%;
		box-shadow: $globalShadow;
		color: $main;
		cursor: pointer;
		font-size: 3rem;
		font-weight: 900;
		line-height: 50%;
		text-align: center;
		transition: background-color 0.2s, color 0.2s;
		-moz-user-select: none;
		user-select: none;

		&:hover {
			background-color: $main;
			color: $white;
		}

		&.heads {
			animation: flipHeads 2s;
		}

		&.tails {
			animation: flipTails 2s;
		}
	}
}

.countHeading {
	@include flex-center();
	background-color: $grayDark;
	border: 0.1rem solid $main;
	border-radius: $globalRadius;
	flex: 0 0 48%;
	flex-direction: column;
	font-weight: 900;
	text-align: center;

	div:first-child {
		font-size: 1.1rem;
		font-weight: 700;
		margin-top: 0.5rem;
	}

	div:not(first-child) {
		font-size: 2.5rem;
	}
}

//****************************************************************************
// Page | Live Chat (page)
//****************************************************************************

.chatwindow {
	@include flex-column;
	@include themeborder(grayBlack);
	border: 0.1rem solid $grayBlack;
	border-radius: $globalRadius;
	justify-content: space-between;
	max-height: 50rem;
	min-height: 40rem;
	padding: 0.5rem;

	//message history
	.chatlog {
		flex: 1 1 auto;
		overflow-x: hidden;
		overflow-y: hidden;

		.line {
			@include flex-row;
			@include themebackground(grayBlack);
			align-items: center;
			background-color: $grayBlack;
			border-radius: $globalRadius;
			margin-bottom: 0.3rem;
			padding: 0.3rem;

			&:hover {
				@include themebackground(grayDarkAlt);
				background-color: $grayDarkAlt;

				.line-timestamp {
					@include themecolor(alt);
					color: $alt;
				}
			}

			.line-user {
				@include themecolor(main);
				flex: 0 0 5.2rem;
				font-weight: 900;
				// color: $main;
				margin-left: 0.45rem;

				.fa {
					padding-right: 0.25rem;
				}
			}

			.line-message {
				flex: 1 1 auto;
				padding-left: 0.5rem;
			}

			.line-timestamp {
				@include themecolor(grayDarkAlt);
				color: $grayDarkAlt;
				flex: 0 0 3rem;
			}

			&.user-system {
				background-color: #44565a;

				.line-user {
					color: skyblue;
				}
			}

			&.user-admin .line-user {
				color: gold;
			}
		}
	}
}

.user-selection {
	@include flex-row;
	flex-wrap: wrap;

	.selectable-user {
		@include flex-column;
		@include themebackground(grayDark);
		@include themeborder(grayBlack);
		background-color: $grayDark;
		border: 0.05rem solid $grayBlack;
		border-radius: $globalRadius;
		box-shadow: $globalShadow;
		cursor: pointer;
		flex: 1 1 auto;
		margin: 1rem;
		transition: background-color 0.2s;

		&.takeable {
			&:hover {
				@include themebackground(main);
				background-color: $main;

				.user-initial {
					@include themebackground(grayBlack);
					background-color: $grayBlack;
				}
			}

			.user-initial {
				@include themeborder(main);
				border-bottom: 0.2rem solid $main;
			}
		}

		&.taken {
			cursor: default;
			opacity: 0.25;

			.user-initial {
				border-bottom: 0.2rem solid $errorColor;
			}
		}

		&.owned {
			@include themeborder(main);
			border: 0.15rem solid $main;

			.user-initial {
				background-color: $grayDark;
			}
		}

		.user-initial {
			@include flex-center;
			@include themebackground(grayMedium);
			background-color: $grayMedium;
			font-size: 6rem;
			font-weight: 700;
			padding: 1rem;
			transition: background-color 0.2s;
		}

		.user-name {
			@include flex-center;
			padding: 1rem;
		}
	}
}

// TODO: REWORK
//live chat
.flex-row-table {
	display: flex;
	flex-direction: column;
	justify-content: space-between;

	.input-text {
		margin-bottom: 0.7rem;
		max-width: 100%;
		width: 100%;
	}
}

//****************************************************************************
// Page | gallery
//****************************************************************************

.gallery {
	.item {
		border-bottom: 0.1rem solid $black;
		box-shadow: $globalShadowInset;

		.item--content {
			padding: 2rem 0 2.5rem;
		}
	}

	.themeheading.negative {
		background-color: transparentize($color: $black, $amount: 0.5);
		display: inline-block;
		margin: 0;
		padding: 0.5rem;
		position: sticky;
		top: 3rem;
		z-index: 200;
	}

	.settings {
		align-items: center;
		background-color: $grayBlack;
		display: flex;
		padding: 0.25rem;
		position: sticky;
		top: 0;
		z-index: 300;

		@include respond-below(md) {
			flex-wrap: wrap;
			justify-content: flex-start;

			& > label {
				display: none;
			}

			& > div {
				flex: 0 0 50%;
			}
		}

		@include respond-below(sm) {
			align-content: flex-start;
			flex-direction: column;
			justify-content: flex-start;

			& > div {
				flex: 1 1 auto;
			}
		}
	}
}

/////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////¨
/////////////////////////////////////////////////////////////////////////////

//****************************************************************************
// Panel | Announcement
//****************************************************************************

.top-panel {
	display: flex;

	.announcement {
		@include themebackground(grayDark);
		@include themeborder(grayBlack);
		background-color: $grayDark;
		border: 0.1rem solid $grayBlack;
		flex: 1 1 auto;
		height: auto;
		min-height: 6rem;
		overflow: hidden;
		padding: 0.5rem;
		text-align: center;
	}
}

//****************************************************************************
// Timer
//****************************************************************************

.time-wrap {
	display: flex;
	flex-direction: row;

	margin-top: 1rem;

	.time-block {
		align-items: center;
		display: flex;
		flex: 1 0 auto;
		flex-direction: column;
		justify-content: center;
		padding: 3rem;

		.time-content {
			@include themecolor(alt);
			color: $alt;

			h3 {
				font-size: 2rem;
				text-align: center;
			}
		}
	}
}

//****************************************************************************
// ScrollSpy
//****************************************************************************

.scrollspy {
	display: flex;
	margin-top: 1rem;

	.is-inview {
		@include themebackground(alt);
		@include themecolor(white);
		background-color: $alt;
		color: $white;
	}

	.scrollNav {
		flex: 0 0 8rem;

		ul {
			position: sticky;
			top: 1.2rem;
		}

		li {
			list-style: none;
			padding-left: 1.2rem;
		}

		a {
			display: block;
			padding: 0.7rem;
			text-align: right;
			width: 100%;
		}
	}

	.scrollContent {
		flex: 1 1 200px;
	}
}

//****************************************************************************
// Utility | Content wrappers
//****************************************************************************

@mixin content($maxWidth) {
	margin: 0 auto;
	max-width: $maxWidth;
	padding: 3rem;
	transition: padding 0.2s;

	@include respond-below(sm) {
		padding: 2rem;
	}
	@include respond-below(xs) {
		padding: 1rem;
	}
}

.content--full {
	@include content(100%);
}

.content--xl {
	@include content(74rem);
}

.content--lg {
	@include content(56rem);
}

.content--md {
	@include content(40rem);
}

.content--sm {
	@include content(30rem);
}

//*************************************************************************************************
// Utility | Content Limiter (restrict width)
//*************************************************************************************************

@mixin limiter($maxWidth) {
	max-width: $maxWidth;
}

.limiter--xl {
	@include limiter(79rem);
}

.limiter--lg {
	@include limiter(65rem);
}

.limiter--md {
	@include limiter(42rem);
}

.limiter--sm {
	@include limiter(32rem);
}

//*************************************************************************************************
// Plugin overwrite | React-datetime
//*************************************************************************************************

.rdtPicker {
	border: 0.1rem solid $main !important;
	box-shadow: 0 0 5px skyblue !important;
	font-family: $bodyfont !important;
	font-size: 1.2rem !important;
	padding: 0.6rem !important;
	width: 20rem !important;

	tr th.rdtSwitch,
	tr th.rdtNext,
	tr th.rdtPrev {
		color: $main !important;
	}

	td.rdtToday::before {
		border-bottom-color: $main !important;
		border-bottom-width: 12px !important;
		border-left-width: 12px !important;
	}

	td.rdtDay {
		border-radius: $globalRadius !important;
		padding: 0.5rem !important;
		transition: background-color 0.25s ease-out, color 0.25s ease-out;
	}

	td.rdtDay:hover {
		background: $main !important;
		color: $white !important;
	}
}
